
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOI CAO CARNEIRO CAVALO COBRA DIV DRAGAO EQ FLOAT_CONST GALO GT ID INT_CONST LT MACACO MOD MUL RATO STRING SUB TIGREprograma : decls comandosdecls : decl ";" declsdecls : decl : tipo ID\n| tipo ID GALO exprtipo : CARNEIRO\n| MACACO\n| CAOcomandos : comando ";" comandoscomandos : comando : TIGRE exprcomando : COBRA IDcomando : ID GALO exprcomando : RATO expr "{" comandos "}" DRAGAO "{" comandos "}"comando : CAVALO expr "{" comandos "}"expr : expr BOI expr\n| expr SUB expr\n| expr MUL expr\n| expr DIV expr\n| expr MOD expr\n| expr GT expr\n| expr LT expr\n| expr EQ exprexpr : "(" expr ")"expr : INT_CONST\n| FLOAT_CONST\n| STRINGexpr : ID'
    
_lr_action_items = {'TIGRE':([0,2,15,17,28,41,42,58,],[-3,10,-3,10,-2,10,10,10,]),'COBRA':([0,2,15,17,28,41,42,58,],[-3,11,-3,11,-2,11,11,11,]),'ID':([0,2,4,5,6,7,10,11,13,14,15,17,19,25,28,29,31,32,33,34,35,36,37,38,41,42,58,],[-3,12,16,-6,-7,-8,23,24,23,23,-3,12,23,23,-2,23,23,23,23,23,23,23,23,23,12,12,12,]),'RATO':([0,2,15,17,28,41,42,58,],[-3,13,-3,13,-2,13,13,13,]),'CAVALO':([0,2,15,17,28,41,42,58,],[-3,14,-3,14,-2,14,14,14,]),'$end':([0,1,2,8,15,17,28,30,],[-3,0,-10,-1,-3,-10,-2,-9,]),'CARNEIRO':([0,15,],[5,5,]),'MACACO':([0,15,],[6,6,]),'CAO':([0,15,],[7,7,]),';':([3,9,16,18,20,21,22,23,24,40,43,44,45,46,47,48,49,50,51,52,56,60,],[15,17,-4,-11,-25,-26,-27,-28,-12,-13,-5,-16,-17,-18,-19,-20,-21,-22,-23,-24,-15,-14,]),'(':([10,13,14,19,25,29,31,32,33,34,35,36,37,38,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'INT_CONST':([10,13,14,19,25,29,31,32,33,34,35,36,37,38,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'FLOAT_CONST':([10,13,14,19,25,29,31,32,33,34,35,36,37,38,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'STRING':([10,13,14,19,25,29,31,32,33,34,35,36,37,38,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'GALO':([12,16,],[25,29,]),'}':([17,30,41,42,53,54,58,59,],[-10,-9,-10,-10,55,56,-10,60,]),'BOI':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[31,-25,-26,-27,-28,31,31,31,31,31,31,31,31,31,31,31,31,31,-24,]),'SUB':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[32,-25,-26,-27,-28,32,32,32,32,32,32,32,32,32,32,32,32,32,-24,]),'MUL':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[33,-25,-26,-27,-28,33,33,33,33,33,33,33,33,33,33,33,33,33,-24,]),'DIV':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[34,-25,-26,-27,-28,34,34,34,34,34,34,34,34,34,34,34,34,34,-24,]),'MOD':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[35,-25,-26,-27,-28,35,35,35,35,35,35,35,35,35,35,35,35,35,-24,]),'GT':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[36,-25,-26,-27,-28,36,36,36,36,36,36,36,36,36,36,36,36,36,-24,]),'LT':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[37,-25,-26,-27,-28,37,37,37,37,37,37,37,37,37,37,37,37,37,-24,]),'EQ':([18,20,21,22,23,26,27,39,40,43,44,45,46,47,48,49,50,51,52,],[38,-25,-26,-27,-28,38,38,38,38,38,38,38,38,38,38,38,38,38,-24,]),'{':([20,21,22,23,26,27,44,45,46,47,48,49,50,51,52,57,],[-25,-26,-27,-28,41,42,-16,-17,-18,-19,-20,-21,-22,-23,-24,58,]),')':([20,21,22,23,39,44,45,46,47,48,49,50,51,52,],[-25,-26,-27,-28,52,-16,-17,-18,-19,-20,-21,-22,-23,-24,]),'DRAGAO':([55,],[57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'decls':([0,15,],[2,28,]),'decl':([0,15,],[3,3,]),'tipo':([0,15,],[4,4,]),'comandos':([2,17,41,42,58,],[8,30,53,54,59,]),'comando':([2,17,41,42,58,],[9,9,9,9,9,]),'expr':([10,13,14,19,25,29,31,32,33,34,35,36,37,38,],[18,26,27,39,40,43,44,45,46,47,48,49,50,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> decls comandos','programa',2,'p_programa','analisador_sintatico.py',17),
  ('decls -> decl ; decls','decls',3,'p_decls_mult','analisador_sintatico.py',23),
  ('decls -> <empty>','decls',0,'p_decls_empty','analisador_sintatico.py',27),
  ('decl -> tipo ID','decl',2,'p_decl','analisador_sintatico.py',33),
  ('decl -> tipo ID GALO expr','decl',4,'p_decl','analisador_sintatico.py',34),
  ('tipo -> CARNEIRO','tipo',1,'p_tipo','analisador_sintatico.py',48),
  ('tipo -> MACACO','tipo',1,'p_tipo','analisador_sintatico.py',49),
  ('tipo -> CAO','tipo',1,'p_tipo','analisador_sintatico.py',50),
  ('comandos -> comando ; comandos','comandos',3,'p_comandos_mult','analisador_sintatico.py',56),
  ('comandos -> <empty>','comandos',0,'p_comandos_empty','analisador_sintatico.py',60),
  ('comando -> TIGRE expr','comando',2,'p_comando_print','analisador_sintatico.py',64),
  ('comando -> COBRA ID','comando',2,'p_comando_input','analisador_sintatico.py',68),
  ('comando -> ID GALO expr','comando',3,'p_comando_atribuicao','analisador_sintatico.py',72),
  ('comando -> RATO expr { comandos } DRAGAO { comandos }','comando',9,'p_comando_if_else','analisador_sintatico.py',76),
  ('comando -> CAVALO expr { comandos }','comando',5,'p_comando_while','analisador_sintatico.py',80),
  ('expr -> expr BOI expr','expr',3,'p_expr_binop','analisador_sintatico.py',86),
  ('expr -> expr SUB expr','expr',3,'p_expr_binop','analisador_sintatico.py',87),
  ('expr -> expr MUL expr','expr',3,'p_expr_binop','analisador_sintatico.py',88),
  ('expr -> expr DIV expr','expr',3,'p_expr_binop','analisador_sintatico.py',89),
  ('expr -> expr MOD expr','expr',3,'p_expr_binop','analisador_sintatico.py',90),
  ('expr -> expr GT expr','expr',3,'p_expr_binop','analisador_sintatico.py',91),
  ('expr -> expr LT expr','expr',3,'p_expr_binop','analisador_sintatico.py',92),
  ('expr -> expr EQ expr','expr',3,'p_expr_binop','analisador_sintatico.py',93),
  ('expr -> ( expr )','expr',3,'p_expr_group','analisador_sintatico.py',97),
  ('expr -> INT_CONST','expr',1,'p_expr_const','analisador_sintatico.py',101),
  ('expr -> FLOAT_CONST','expr',1,'p_expr_const','analisador_sintatico.py',102),
  ('expr -> STRING','expr',1,'p_expr_const','analisador_sintatico.py',103),
  ('expr -> ID','expr',1,'p_expr_id','analisador_sintatico.py',107),
]
